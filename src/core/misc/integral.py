import numpy as np
from common import f


def gauss_legendre(n):
    values = [[[1.0, 1.0], [0.57735, -0.57735]],
              [[0.555556, 0.88889, 0.55556], [0.77459, 0, -0.77459]],
              [[0.34786, 0.65215, 0.65215, 0.34786], [
                  0.86114, 0.33998, -0.33999, -0.86114]],
              [[0.23693, 0.47863, 0.56889, 0.47863, 0.23693],
                  [0.90618, 0.53847, 0, -0.53847, -0.90618]],
              [[0.17133, 0.36076, 0.46791, 0.46791, 0.36076, 0.17133], [
                  0.93247, 0.66121, 0.23862, -0.23862, -0.66121, -0.93247]],
              [[0.12949, 0.27971, 0.38183, 0.41796, 0.38183, 0.27971, 0.12949],
               [0.94911, 0.74153, 0.40585, 0, -0.40585, -0.74153, -0.94911]],
              [[0.10123, 0.22238, 0.31371, 0.36268, 0.36268, 0.31371, 0.22238, 0.10123], [
                  0.96029, 0.79667, 0.53553, 0.18343, -0.18343, -0.53553, -0.79667, -0.96029]],
              [[0.08127, 0.18065, 0.26061, 0.31235, 0.33024, 0.31235, 0.26061, 0.18065, 0.08127], [
                  0.96816, 0.83603, 0.61337, 0.32425, 0, -0.32425, -0.61337, -0.83603, -0.96816]],
              [[0.06667, 0.14945, 0.21909, 0.26927, 0.29552, 0.29552, 0.26927, 0.21909, 0.14945, 0.06667], [0.97391, 0.86506, 0.67941, 0.43339, 0.14887, -0.14887, -0.43339, -0.67941, -0.86506, -0.97391]]]

    return values[n-2]


def polynomial(n):
    x = [None]*n
    B = [None]*n
    A = np.zeros((n, n))

    for i in range(1, n+1):
        x[i-1] = (i-1)/(n-1)

    for i in range(1, n+1):
        for j in range(1, n+1):
            A[i-1, j-1] = x[j-1]**(i-1)
        B[i-1] = 1/i

    return (np.linalg.inv(A) @ B, x)


def integrate(a, b, n, c, method):
    if n > 10:
        raise Exception('Chosen value must not be grater than 10.')

    if n < 2:
        raise Exception('Chosen value must not be lower than 2.')

    if method == 'gauss_legendre':
        w, z = gauss_legendre(n)
    elif method == 'polynomial':
        w, z = polynomial(n)
    else:
        raise Exception(
            'Invalid method name. Choose gauss_legendre or polynomial.')

    sum = 0
    for i in range(len(w)):
        sum += w[i] * f(0.5 * (a + b + z[i] * (b-a)), c)

    return (b-a) * sum/2
